buildscript {
  ext {
    springBootVersion = '1.5.7.RELEASE'
    gradleNodePluginVersion = '1.2.0'
  }
  repositories {
    mavenCentral()
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    classpath("com.moowork.gradle:gradle-node-plugin:${gradleNodePluginVersion}")
  }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.moowork.node'

group = 'org.enlighten-series'
sourceCompatibility = 1.8

repositories {
  mavenCentral()
}


dependencies {
  compile('org.springframework.boot:spring-boot-starter')
  compile('org.springframework.boot:spring-boot-starter-aop')
  compile('org.springframework.boot:spring-boot-starter-web')
  compile('org.springframework.boot:spring-boot-starter-data-rest')

  compile('org.springframework.boot:spring-boot-starter-security')

  compile('org.projectlombok:lombok:1.16.18')
  compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.1')

  compile('org.apache.commons:commons-csv:1.5')

  runtime('com.h2database:h2')

  testCompile('org.springframework.boot:spring-boot-starter-test')
}

/**
 * Gradle Node Plugin Configuration
 */

node
{
  version = "8.5.0"
  download = true
  nodeModulesDir = file("./")
}

/**
 * Application profiles
 */

def activeProfiles = 'dev'
if (project.hasProperty('prod')) {
  activeProfiles = 'prod'
}
processResources {
  filesMatching('**/application.yml') {
    filter {
      it.replace('#spring.profiles.active#', activeProfiles)
    }
  }
}

/**
 * Tasks
 */
defaultTasks 'clean', 'bootRepackage'

task buildClientDev(type: NpmTask, dependsOn: 'npmInstall') {
  group = 'build'
  description = 'Compile client side folder for development'
  args = ['run','buildDev']
}

task buildClientProd(type: NpmTask, dependsOn: 'npmInstall') {
  group = 'build'
  description = 'Compile client side folder for production packaging'
  args = ['run','buildProd']
}

compileJava.dependsOn processResources
processResources.dependsOn clean

bootRun.dependsOn(buildClientDev)

bootRepackage.dependsOn(buildClientProd)
